
<html lang="en-US">

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<title>Home</title>

<head>
  <%- include('partials/dashboard'); %>
</head>

<div class = "container-fluid">
    <div class="row align-items-start">
      <div class="col-md-2"></div>
      <div class="col-md-4">
        <div class="container" style="margin-top: 50px; padding: 10px; border: solid 1px black">
          <form method="POST" action="/payment">
            <table>
              <tr>
                <td><label>Order ID : </label></td>
                <td></td>
                <td><input type="text" name="order_id"/></td>
              </tr>
              <tr>
                <td><label>Amount : </label></td>
                <td></td>
                <td><input type="number" id="amount" name="amount" onkeyup="getFinalAmount()"/></td>
                <td>
                  <select id="currency" name="currency" onchange="getFinalAmountOnChange()">
                    <option value="1">BND</option>
                    <option value="<%= usd %>">USD</option>
                    <option value="<%= twd %>" selected>TWD</option>
                    <option value="<%= myr %>">MYR</option>
                  </select>
                </td>
              </tr>
              <tr>
                <td><label>Amount (BND) : </label></td>
                <td></td>
                <td><input type="text" id="finalAmount" name="finalAmount" onkeyup="getAmount()"/></td>
                <td>
                  <select>
                    <option name="bnd">BND</option>
                  </select>
                </td>
              </tr>

            </table>
            <br>
            
            <br>
            <button style="align-items: center;" type="submit">Proceed with payment</button>
          </form>
        </div>

      </div>
      <div class="container col-md-4">
        <br>
        <h2></h2>
      </div>
      <div class="col-md-2" style="display:none">
        <p><%= usd %></p>
        <p><%= twd %></p>
        <p><%= myr %></p>
      </div>
      </div>
      </div>

<footer>
  
    <%- include('partials/footer'); %>
</footer>


<script>

  function getFinalAmount(){
    document.getElementById("finalAmount").value = "";
    document.getElementById("finalAmount").value = (document.getElementById("amount").value * document.getElementById("currency").value).toFixed(2);
  }

  function getFinalAmountOnChange(){
    document.getElementById("finalAmount").value = "";
    document.getElementById("finalAmount").value = (document.getElementById("amount").value * document.getElementById("currency").value).toFixed(2);
  }

  function getAmount(){
    document.getElementById("amount").value = "";
    document.getElementById("amount").value = (document.getElementById("finalAmount").value / document.getElementById("currency").value).toFixed(2);
  }

  var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: 'KEvXT_fx4mk',
          playerVars: {
            'playsinline': 1
          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }

</script>

</html>